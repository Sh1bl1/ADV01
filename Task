
public class Range<T> where T : IComparable<T>
{
    public T Min { get; set;}
    public T Max { get; set;}

    public Range(T min, T max)
    {
        if (min.CompareTo(max) > 0)
            throw new ArgumentException("Minimum  cannot be greater than maximum .");

        Min = min;
        Max = max;
    }

    public bool IsInRange(T value)
    {
        return value.CompareTo(Min) >= 0 && value.CompareTo(Max) <= 0;
    }

    public void Length()
    {
        try
        {
            return Max - Min;
        }
        catch
        {
            throw new InvalidOperationException("Length calculation is not supported for this type  " );
        }
    }
}
